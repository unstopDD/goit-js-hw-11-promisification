{"version":3,"sources":["webpack:///./index.js"],"names":["console","log","delay","ms","Promise","resolve","setTimeout","logger","time","then","ex01","users","name","active","toggleUserState","allUsers","userName","updatedUsers","map","user","table","makeTransaction","transaction","min","max","Math","floor","random","reject","id","logSuccess","logError","warn","amount","catch"],"mappings":"qJAEA,WACEA,QAAQC,IAAI,aAAc,kCAC1B,IAAMC,EAAQ,SAAAC,GACZ,OAAO,IAAIC,SAAQ,SAAAC,GACjBC,YAAW,WACTD,EAAQF,KACPA,OAIDI,EAAS,SAAAC,GAAI,OAAIR,QAAQC,IAAR,kBAA8BO,EAA9B,OAGvBN,EAAM,KAAMO,KAAKF,GACjBL,EAAM,KAAMO,KAAKF,GACjBL,EAAM,MAAMO,KAAKF,GAEnBG,GA2BAJ,YAvBA,WACEN,QAAQC,IAAI,aAAc,kCAC1B,IAAMU,EAAQ,CACZ,CAAEC,KAAM,QAASC,QAAQ,GACzB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,MAAOC,QAAQ,IAGnBC,EAAkB,SAACC,EAAUC,GACjC,IAAMC,EAAeF,EAASG,KAAI,SAAAC,GAAI,OACpCA,EAAKP,OAASI,EAAd,iBAA8BG,EAA9B,CAAoCN,QAASM,EAAKN,SAAWM,KAE/D,OAAO,IAAIf,SAAQ,SAAAC,GACjBA,EAAQY,OAINV,EAAS,SAAAU,GAAY,OAAIjB,QAAQoB,MAAMH,IAE7CH,EAAgBH,EAAO,SAASF,KAAKF,GACrCO,EAAgBH,EAAO,OAAOF,KAAKF,KAEpB,KA+CjBD,YA3CA,WACEN,QAAQC,IAAI,aAAc,kCAC1B,IAIMoB,EAAkB,SAAAC,GACtB,IALiCC,EAAKC,EAKhCtB,GAL2BqB,EAKO,IALFC,EAKO,IAJtCC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,IAMpD,OAAO,IAAInB,SAAQ,SAACC,EAASuB,GAC3BtB,YAAW,WACUmB,KAAKE,SAAW,IAGjCtB,EAAQ,CACNwB,GAAIP,EAAYO,GAChB3B,MAAOA,IAGX0B,EAAON,EAAYO,MAClB3B,OAID4B,EAAa,SAAAR,GACjBtB,QAAQC,IAAR,eACiBqB,EAAYO,GAD7B,iBACgDP,EAAYpB,MAD5D,OAKI6B,EAAW,SAAAF,GACf7B,QAAQgC,KAAR,gCAA6CH,EAA7C,8BAGFR,EAAgB,CAAEQ,GAAI,GAAII,OAAQ,MAAOxB,KAAKqB,GAAYI,MAAMH,GAEhEV,EAAgB,CAAEQ,GAAI,GAAII,OAAQ,MAAOxB,KAAKqB,GAAYI,MAAMH,GAEhEV,EAAgB,CAAEQ,GAAI,GAAII,OAAQ,KAAMxB,KAAKqB,GAAYI,MAAMH,GAE/DV,EAAgB,CAAEQ,GAAI,GAAII,OAAQ,MAAOxB,KAAKqB,GAAYI,MAAMH,KAGjD,Q","file":"main.5bed1344955eff1d735a.js","sourcesContent":["//Exercise-01\r\n\r\nfunction ex01() {\r\n  console.log('%c Task-01', 'color: bisque; font-size: 24px');\r\n  const delay = ms => {\r\n    return new Promise(resolve => {\r\n      setTimeout(() => {\r\n        resolve(ms);\r\n      }, ms);\r\n    });\r\n  };\r\n\r\n  const logger = time => console.log(`Resolved after ${time}ms`);\r\n\r\n  // Вызовы функции для проверки\r\n  delay(2000).then(logger); // Resolved after 2000ms\r\n  delay(1000).then(logger); // Resolved after 1000ms\r\n  delay(1500).then(logger); // Resolved after 1500ms\r\n}\r\nex01();\r\n\r\n//Exercise-02\r\n\r\nfunction ex02() {\r\n  console.log('%c Task-02', 'color: bisque; font-size: 24px');\r\n  const users = [\r\n    { name: 'Mango', active: true },\r\n    { name: 'Poly', active: false },\r\n    { name: 'Ajax', active: true },\r\n    { name: 'Lux', active: false },\r\n  ];\r\n\r\n  const toggleUserState = (allUsers, userName) => {\r\n    const updatedUsers = allUsers.map(user =>\r\n      user.name === userName ? { ...user, active: !user.active } : user,\r\n    );\r\n    return new Promise(resolve => {\r\n      resolve(updatedUsers);\r\n    });\r\n  };\r\n\r\n  const logger = updatedUsers => console.table(updatedUsers);\r\n\r\n  toggleUserState(users, 'Mango').then(logger);\r\n  toggleUserState(users, 'Lux').then(logger);\r\n}\r\nsetTimeout(ex02, 3000);\r\n\r\n//Exercise-03\r\n\r\nfunction ex03() {\r\n  console.log('%c Task-03', 'color: bisque; font-size: 24px');\r\n  const randomIntegerFromInterval = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n  };\r\n\r\n  const makeTransaction = transaction => {\r\n    const delay = randomIntegerFromInterval(200, 500);\r\n\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        const canProcess = Math.random() > 0.3;\r\n\r\n        if (canProcess) {\r\n          resolve({\r\n            id: transaction.id,\r\n            delay: delay,\r\n          });\r\n        }\r\n        reject(transaction.id);\r\n      }, delay);\r\n    });\r\n  };\r\n\r\n  const logSuccess = transaction => {\r\n    console.log(\r\n      `Transaction ${transaction.id} processed in ${transaction.delay}ms`,\r\n    );\r\n  };\r\n\r\n  const logError = id => {\r\n    console.warn(`Error processing transaction ${id}. Please try again later.`);\r\n  };\r\n\r\n  makeTransaction({ id: 70, amount: 150 }).then(logSuccess).catch(logError);\r\n\r\n  makeTransaction({ id: 71, amount: 230 }).then(logSuccess).catch(logError);\r\n\r\n  makeTransaction({ id: 72, amount: 75 }).then(logSuccess).catch(logError);\r\n\r\n  makeTransaction({ id: 73, amount: 100 }).then(logSuccess).catch(logError);\r\n}\r\n\r\nsetTimeout(ex03, 3500);\r\n"],"sourceRoot":""}